{"ast":null,"code":"var _jsxFileName = \"/home/fabio/Documents/projetos/Form React Redux/form-react-redux/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport setName from '../actions/FormActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderForms = (type, value, name, setName) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      value: value,\n      name: name,\n      onChange: () => setName(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    const {\n      name,\n      setName\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: this.renderForms('text', name, 'nome', setName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  name: state.formReducer.name\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setName: name => dispatch(setName(name))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/fabio/Documents/projetos/Form React Redux/form-react-redux/src/components/Form.js"],"names":["React","Component","connect","setName","Form","renderForms","type","value","name","render","props","mapStateToProps","state","formReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAC3BI,WAD2B,GACb,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAoBL,OAApB,kBACZ;AACA,MAAA,IAAI,EAAGG,IADP;AAEA,MAAA,KAAK,EAAGC,KAFR;AAGA,MAAA,IAAI,EAAGC,IAHP;AAIA,MAAA,QAAQ,EAAG,MAAML,OAAO,CAACI,KAAD;AAJxB;AAAA;AAAA;AAAA;AAAA,YAFyB;AAAA;;AAU3BE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,IAAF;AAAQL,MAAAA;AAAR,QAAoB,KAAKO,KAA/B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,kBACI,KAAKL,WAAL,CAAiB,MAAjB,EAAyBG,IAAzB,EAA+B,MAA/B,EAAuCL,OAAvC;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnB0B;;AAsB7B,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,IAAI,EAAEI,KAAK,CAACC,WAAN,CAAkBL;AADU,CAAZ,CAAxB;;AAIA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,OAAO,EAAGK,IAAD,IAAUO,QAAQ,CACzBZ,OAAO,CAACK,IAAD,CADkB;AADa,CAAf,CAA3B;;AAMA,eAAeN,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport setName from '../actions/FormActions'\n\nclass Form extends Component {\n  renderForms = (type, value, name, setName ) => (\n    <input\n    type={ type }\n    value={ value }\n    name={ name }\n    onChange={ () => setName(value) }\n    />\n  )\n\n  render() {\n    const { name, setName } = this.props;\n    return (\n      <div className=\"Form\">\n        <form>\n          { this.renderForms('text', name, 'nome', setName) }\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.formReducer.name\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setName: (name) => dispatch(\n    setName(name),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}